# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../../dsoftbus.gni")

module_output_path = "dsoftbus/transmission"
dsoftbus_root_path = "../../../../../.."

if (defined(ohos_lite)) {
  executable("dsoftbus_app_dfile") {
    sources = [ "dsoftbus_app_dfile.c" ]
    include_dirs = [
      "../../../../../../interfaces/kits/common",
      "../../../../../../interfaces/kits/bus_center",
      "../../../../../../interfaces/kits/common",
      "$dsoftbus_root_path/interfaces/kits/transport",
      "$dsoftbus_root_path//core/common/include",
      "//third_party/bounds_checking_function/include",
    ]
    deps = [
      "$dsoftbus_root_path/core/common:softbus_utils",
      "$dsoftbus_root_path/tests/sdk:softbus_client_static",
      "//third_party/bounds_checking_function:libsec_shared",
    ]
  }
} else {
  import("//build/ohos.gni")

  ###########################palTest###########################
  ohos_executable("dsoftbus_app_dfile") {
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }
    branch_protector_ret = "pac_ret"

    install_enable = true
    sources = [ "dsoftbus_app_dfile.cpp" ]

    include_dirs = [
      "../../../../../../interfaces/kits/common",
      "../../../../../../interfaces/kits/bus_center",
      "../../../../../../interfaces/kits/common",
      "$dsoftbus_root_path/interfaces/kits/transport",
    ]

    deps = [
      "$dsoftbus_root_path/core/common:softbus_utils",
      "$dsoftbus_root_path/tests/sdk:softbus_client_static",
    ]

    if (is_standard_system) {
      external_deps = [
        "c_utils:utils",
        "hilog:libhilog",
      ]
      part_name = "dsoftbus"
    }
    subsystem_name = "communication"
  }

  ohos_unittest("TransSdkFileTest") {
    module_out_path = module_output_path
    sources = [ "trans_sdk_file_test.cpp" ]

    include_dirs = [
      "$dsoftbus_root_path/interfaces/kits/transport",
      "dsoftbus_root_path/sdk/transmission/trans_channel/udp/stream/include",
      "dsoftbus_root_path/sdk/transmission/trans_channel/udp/stream/src",
      "$dsoftbus_root_path/sdk/transmission/session/cpp/include",
      "$dsoftbus_root_path/sdk/transmission/trans_channel/statistics/include",
      "$dsoftbus_root_path/sdk/transmission/trans_channel/udp/file/include",
      "$dsoftbus_root_path/sdk/transmission/trans_channel/udp/file/src",
      "$dsoftbus_root_path/sdk/transmission/session/include",
      "$dsoftbus_root_path/adapter/common/include",
      "$dsoftbus_root_path/components/nstackx/nstackx_core/dfile/core",
      "$dsoftbus_root_path/sdk/transmission/trans_channel/udp/common/include",
      "$dsoftbus_root_path/core/common/include",
      "$dsoftbus_root_path/adapter/common/include/OS_adapter_define/linux",
      "$dsoftbus_root_path/adapter/common/include",
      "$dsoftbus_root_path/components/nstackx/nstackx_util/interface",
      "$dsoftbus_root_path/interfaces/kits/transport",
      "$dsoftbus_root_path/core/transmission/trans_channel/udp_negotiation/include",
      "$dsoftbus_root_path/sdk/transmission/trans_channel/udp/stream/include",
      "$dsoftbus_root_path/sdk/transmission/trans_channel/udp/common/src",
      "$dsoftbus_root_path/sdk/transmission/ipc/include",
      "$dsoftbus_root_path/components/nstackx/nstackx_core/dfile/interface",
      "$dsoftbus_root_path/components/nstackx/nstackx_core/dfile/core",
      "$dsoftbus_root_path/sdk/transmission/trans_channel/tcp_direct/include",
    ]

    deps = [
      "$dsoftbus_root_path/core/common:softbus_utils",
      "$dsoftbus_root_path/core/frame:softbus_server",
      "$dsoftbus_root_path/tests/sdk:softbus_client_static",
    ]

    native_source_path = rebase_path("$dsoftbus_root_path")
    dep_file = "components/nstackx_enhanced/nstackx_core/dfile/BUILD.gn"
    enhanced = exec_script("$dsoftbus_root_path/check_sub_module.py",
                           [
                             "$native_source_path",
                             "$dep_file",
                           ],
                           "value")

    if (enhanced) {
      deps += [ "$dsoftbus_root_path/components/nstackx_enhanced/nstackx_core/dfile:nstackx_dfile" ]
    } else {
      deps += [ "$dsoftbus_root_path/components/nstackx/nstackx_core/dfile:nstackx_dfile.open" ]
    }

    external_deps = [
      "bounds_checking_function:libsec_static",
      "c_utils:utils",
      "hilog:libhilog",
    ]
  }

  group("unittest") {
    testonly = true
    deps = [ ":TransSdkFileTest" ]
  }
}
