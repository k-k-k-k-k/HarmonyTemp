# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../../dsoftbus.gni")

dsoftbus_root_path = "../../../.."

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  import("//build/lite/config/test.gni")

  if (ohos_build_type == "debug") {
    unittest("DiscSdkTest") {
      output_extension = "bin"
      output_dir = "$root_out_dir/test/unittest/dsoftbus"
      sources = [
        "disc_sdk_test.cpp",
        "disc_sdk_test_bt_status_virtual.c",
      ]
      include_dirs = [
        "$dsoftbus_root_path/core/common/include",
        "$dsoftbus_root_path/sdk/bus_center/manager/include",
        "$dsoftbus_root_path/interfaces/kits/discovery",
        "$dsoftbus_root_path/interfaces/kits/common",
        "$dsoftbus_root_path/tests/sdk/common/include",
      ]
      deps = [
        "$dsoftbus_root_path/sdk:softbus_client",
        "$dsoftbus_root_path/tests/sdk/common:softbus_access_token_test",
      ]
    }
  }
} else {
  import("//build/test.gni")
  module_output_path = "dsoftbus/discovery"
  ohos_unittest("DiscSdkOnlyL2Test") {
    module_out_path = module_output_path
    sources = [ "disc_sdk_only_l2_test.cpp" ]
    include_dirs = [
      "$dsoftbus_root_path/core/common/inner_communication",
      "$dsoftbus_root_path/core/common/include",
      "$dsoftbus_root_path/interfaces/kits/discovery",
      "$dsoftbus_root_path/interfaces/kits/common",
      "$dsoftbus_root_path/sdk/discovery/include",
      "$dsoftbus_root_path/sdk/discovery/manager/include",
      "$dsoftbus_root_path/tests/sdk/common/include",
      "unittest/common/",
    ]
    deps = [
      "$dsoftbus_root_path/tests/sdk:softbus_client_static",
      "$dsoftbus_root_path/tests/sdk/common:softbus_access_token_test",
    ]
    external_deps = [
      "bounds_checking_function:libsec_static",
      "c_utils:utils",
      "googletest:gtest_main",
      "hilog:libhilog",
    ]
  }

  ohos_unittest("DiscSdkTest") {
    module_out_path = module_output_path
    sources = [ "disc_sdk_test.cpp" ]
    include_dirs = [
      "$dsoftbus_root_path/sdk/bus_center/manager/include",
      "$dsoftbus_root_path/core/common/inner_communication",
      "$dsoftbus_root_path/core/common/include",
      "$dsoftbus_root_path/interfaces/inner_kits/lnn",
      "$dsoftbus_root_path/interfaces/kits/discovery",
      "$dsoftbus_root_path/interfaces/kits/common",
      "$dsoftbus_root_path/sdk/discovery/include",
      "unittest/common/",
      "$dsoftbus_root_path/sdk/discovery/manager/include",
      "$dsoftbus_root_path/tests/sdk/common/include",
    ]
    deps = [
      "$dsoftbus_root_path/tests/sdk:softbus_client_static",
      "$dsoftbus_root_path/tests/sdk/common:softbus_access_token_test",
    ]
    external_deps = [
      "bounds_checking_function:libsec_static",
      "c_utils:utils",
      "googletest:gtest_main",
      "hilog:libhilog",
    ]
    if (dsoftbus_feature_deps_bluetooth &&
        (dsoftbus_feature_conn_br || dsoftbus_feature_conn_ble)) {
      sources += [ "disc_sdk_test_bt_status.c" ]
      external_deps += [ "bluetooth:btframework" ]
    } else {
      sources += [ "disc_sdk_test_bt_status_virtual.c" ]
    }
  }

  group("unittest") {
    testonly = true
    deps = [
      ":DiscSdkOnlyL2Test",
      ":DiscSdkTest",
    ]
  }
}
