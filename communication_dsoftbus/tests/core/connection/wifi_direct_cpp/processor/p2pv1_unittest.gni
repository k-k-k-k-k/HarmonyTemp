# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../../../dsoftbus.gni")

wifi_direct_path = "$dsoftbus_root_path/core/connection/wifi_direct_cpp"
wifi_direct_unit_path =
    "$dsoftbus_root_path/tests/core/connection/wifi_direct_cpp"
current_path = rebase_path(".")

processorv1_ut_include_dirs = [
  "$current_path",
  "$dsoftbus_dfx_path/interface/include",
  "$dsoftbus_root_path/core/bus_center/utils/include",
  "$dsoftbus_root_path/core/authentication/include",
  "$dsoftbus_root_path/core/authentication/interface",
  "$dsoftbus_root_path/core/bus_center/lnn/net_builder/include",
  "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/common/include",
  "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/common/include",
  "$dsoftbus_root_path/core/bus_center/lnn/net_ledger/distributed_ledger/include",
  "$dsoftbus_root_path/core/bus_center/lnn/lane_hub/lane_manager/include",
  "$dsoftbus_root_path/core/bus_center/interface",
  "$dsoftbus_root_path/core/connection/interface",
  "$dsoftbus_root_path/core/common/include",
  "$dsoftbus_root_path/core/discovery/manager/include",
  "$dsoftbus_root_path/core/discovery/interface",
  "$dsoftbus_root_path/adapter/common/include",
  "$dsoftbus_root_path/interfaces/kits/common",
  "$dsoftbus_root_path/interfaces/kits/discovery",
  "$dsoftbus_root_path/interfaces/kits/bus_center",
  "$dsoftbus_root_path/interfaces/inner_kits/lnn",
  "$dsoftbus_root_path/core/transmission/trans_channel/proxy/include",
  "$dsoftbus_root_path/adapter/common/include/OS_adapter_define/linux",
  "$dsoftbus_root_path/core/transmission/trans_channel/proxy/include",

  "$dsoftbus_root_path/tests/common/include",

  "$wifi_direct_path",
  "$wifi_direct_unit_path",
]

processorv1_ut_sources = [
  "$wifi_direct_path/adapter/p2p_adapter.cpp",
  "$wifi_direct_path/channel/auth_negotiate_channel.cpp",
  "$wifi_direct_path/channel/dummy_negotiate_channel.cpp",

  # proxy_negotiate_channel is mocked
  "$wifi_direct_path/command/command_factory.cpp",
  "$wifi_direct_path/command/connect_command.cpp",
  "$wifi_direct_path/command/disconnect_command.cpp",
  "$wifi_direct_path/command/force_disconnect_command.cpp",
  "$wifi_direct_path/command/negotiate_command.cpp",
  "$wifi_direct_path/command/processor_selector_factory.cpp",
  "$wifi_direct_path/command/simple_processor_selector.cpp",
  "$wifi_direct_path/data/inner_link.cpp",
  "$wifi_direct_path/data/interface_info.cpp",
  "$wifi_direct_path/data/interface_manager.cpp",
  "$wifi_direct_path/data/ipv4_info.cpp",
  "$wifi_direct_path/data/link_info.cpp",
  "$wifi_direct_path/data/link_manager.cpp",
  "$wifi_direct_path/data/negotiate_message.cpp",
  "$wifi_direct_path/data/wifi_config_info.cpp",

  # entity is mocked by p2p_entity.h in current directory
  "$current_path/channel/proxy_negotiate_channel.h",
  "$current_path/p2p_v1_processor_test.cpp",
  "$wifi_direct_path/dfx/duration_statistic.cpp",
  "$wifi_direct_path/dfx/interface_snapshot.cpp",
  "$wifi_direct_path/dfx/link_snapshot.cpp",
  "$wifi_direct_path/dfx/processor_snapshot.cpp",
  "$wifi_direct_path/dfx/wifi_direct_dfx.cpp",
  "$wifi_direct_path/dfx/wifi_direct_trace.cpp",
  "$wifi_direct_path/event/wifi_direct_event_dispatcher.cpp",
  "$wifi_direct_path/processor/null_processor.cpp",
  "$wifi_direct_path/processor/p2p_v1_processor.cpp",
  "$wifi_direct_path/protocol/json_protocol.cpp",
  "$wifi_direct_path/protocol/tlv_protocol.cpp",
  "$wifi_direct_path/utils/wifi_direct_anonymous.cpp",
  "$wifi_direct_path/wifi_direct_executor.cpp",
  "$wifi_direct_path/wifi_direct_initiator.cpp",
  "$wifi_direct_path/wifi_direct_ip_manager.cpp",
  "$wifi_direct_path/wifi_direct_manager.cpp",
  "$wifi_direct_path/wifi_direct_role_option.cpp",
  "$wifi_direct_path/wifi_direct_scheduler.cpp",
  "$wifi_direct_unit_path/net_conn_client.cpp",
  "$wifi_direct_unit_path/wifi_direct_mock.cpp",
  "$wifi_direct_unit_path/wifi_direct_utils.cpp",
]

processorv1_ut_defines = [ "P2P_V1_WAITING_TIMEOUT_MS_OVERWRITE=1000" ]
