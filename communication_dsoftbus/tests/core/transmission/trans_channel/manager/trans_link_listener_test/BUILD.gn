# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../../../dsoftbus.gni")

module_output_path = "dsoftbus/transmission"

ohos_unittest("TransLinkListenerTest") {
  module_out_path = module_output_path
  sources = [
    "../mock/trans_manager_mock.cpp",
    "trans_link_listener_test.cpp",
  ]

  include_dirs = [
    "unittest/common/",

    "$dsoftbus_core_path/adapter/transmission/include",

    "$dsoftbus_core_path/authentication/interface",

    "$dsoftbus_core_path/bus_center/interface",
    "$dsoftbus_core_path/bus_center/lnn/lane_hub/lane_manager/include",
    "$dsoftbus_core_path/bus_center/lnn/net_ledger/common/include",
    "$dsoftbus_core_path/bus_center/lnn/net_ledger/distributed_ledger/include",

    "$dsoftbus_core_path/connection/wifi_direct_cpp",

    "$dsoftbus_core_path/discovery/interface",
    "$dsoftbus_core_path/discovery/manager/include",

    "$dsoftbus_core_path/transmission/session/include",
    "$dsoftbus_core_path/transmission/trans_channel/manager/include",
    "$dsoftbus_core_path/transmission/trans_channel/manager/src",
    "$dsoftbus_core_path/transmission/trans_channel/tcp_direct/include",

    "../mock",
  ]

  deps = [
    "$dsoftbus_core_path/common:softbus_utils",
    "$dsoftbus_core_path/frame:softbus_server",
  ]

  external_deps = [
    "c_utils:utils",
    "dsoftbus:softbus_client",
    "googletest:gmock",
    "googletest:gtest_main",
    "hilog:libhilog",
  ]

  if (!is_standard_system) {
    external_deps += [ "hilog_lite:hilog_lite" ]
  }
}

group("unittest") {
  testonly = true
  deps = [ ":TransLinkListenerTest" ]
}
