# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("../../adapter/common/net/bluetooth/net_bluetooth.gni")
import("../../dsoftbus.gni")

br_adapter_src =
    [ "$dsoftbus_root_path/core/adapter/br/mock/wrapper_br_interface.c" ]

br_adapter_inc = [ "$dsoftbus_root_path/core/adapter/br/include" ]

bus_center_core_adapter_src = [
  "$dsoftbus_root_path/core/adapter/bus_center/src/bus_center_adapter.c",
  "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_deviceinfo_to_profile_virtual.c",
  "$dsoftbus_root_path/core/adapter/transmission/src/data_bus_native_virtual.c",
  "$dsoftbus_root_path/core/adapter/authentication/src/lnn_extdata_config_virtual.c",
]
bus_center_core_adapter_inc = [ "$dsoftbus_root_path/adapter/common/include" ]
bus_center_core_adapter_deps = [ "$dsoftbus_dfx_path:softbus_dfx" ]
bus_center_core_adapter_external_deps = [ "init:libbegetutil" ]

if (dsoftbus_feature_lnn_cloud_sync) {
  bus_center_core_adapter_external_deps += [ "kv_store:distributeddata_inner" ]
  bus_center_core_adapter_src += [
    "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_kv_adapter_wrapper.cpp",
    "$dsoftbus_root_path/core/adapter/kv_store/src/lnn_kv_adapter.cpp",
    "$dsoftbus_root_path/core/adapter/kv_store/src/lnn_kv_data_change_listener.cpp",
    "$dsoftbus_root_path/core/adapter/subscribe_kv_store_sa/src/lnn_kv_store_launch_listener.cpp",
  ]
  bus_center_core_adapter_inc += [
    "$dsoftbus_root_path/core/adapter/kv_store/include",
    "$dsoftbus_root_path/core/adapter/subscribe_kv_store_sa/include",
  ]
} else {
  bus_center_core_adapter_src += [ "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_kv_adapter_wrapper_virtual.cpp" ]
}

if (defined(ohos_lite)) {
  bus_center_core_adapter_src += [
    "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_settingdata_event_monitor_virtual.cpp",
    "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_ohos_account_virtual.cpp",
    "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_ohos_account_adapter_virtual.cpp",
  ]
  bus_center_core_adapter_inc += [
    "$dsoftbus_root_path/core/adapter/bus_center/include",
    "$dsoftbus_root_path/core/bus_center/utils/include",
    "//base/startup/init/interfaces/innerkits/include/syspara",
  ]

  bus_center_core_adapter_deps +=
      [ "//base/startup/init/interfaces/innerkits:libbegetutil" ]

  if (dsoftbus_feature_encrypt == 0) {
    bus_center_core_adapter_src += [
      "$dsoftbus_root_path/core/adapter/huks/src/softbus_rsa_encrypt_virtual.c",
    ]
    bus_center_core_adapter_inc +=
        [ "$dsoftbus_root_path/core/adapter/huks/include" ]
  } else if (dsoftbus_feature_encrypt == 1) {
    bus_center_core_adapter_src +=
        [ "$dsoftbus_root_path/core/adapter/huks/src/softbus_rsa_encrypt.c" ]
    bus_center_core_adapter_inc +=
        [ "$dsoftbus_root_path/core/adapter/huks/include" ]
    bus_center_core_adapter_external_deps += [
      "huks:libhukssdk",
      "openssl:libcrypto_shared",
    ]
  }
} else {
  if (!dsoftbus_get_devicename) {
    bus_center_core_adapter_src += [ "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_settingdata_event_monitor_virtual.cpp" ]
    bus_center_core_adapter_inc +=
        [ "$dsoftbus_root_path/core/adapter/bus_center/include" ]
  } else {
    bus_center_core_adapter_src += [ "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_settingdata_event_monitor.cpp" ]

    bus_center_core_adapter_inc += [
      "$dsoftbus_root_path/adapter/common/bus_center/include",
      "$dsoftbus_root_path/core/adapter/bus_center/include",
    ]

    bus_center_core_adapter_external_deps += [
      "ability_base:want",
      "ability_base:zuri",
      "ability_runtime:abilitykit_native",
      "ability_runtime:dataobs_manager",
      "data_share:datashare_common",
      "data_share:datashare_consumer",
      "i18n:intl_util",
      "relational_store:native_dataability",
      "relational_store:native_rdb",
    ]
  }
  if (softbus_os_account) {
    bus_center_core_adapter_src += [
      "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_ohos_account.cpp",
      "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_ohos_account_adapter.cpp",
    ]
    bus_center_core_adapter_external_deps += [
      "os_account:libaccountkits",
      "os_account:os_account_innerkits",
    ]
  } else {
    bus_center_core_adapter_src += [
      "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_ohos_account_virtual.cpp",
      "$dsoftbus_root_path/core/adapter/bus_center/src/lnn_ohos_account_adapter_virtual.cpp",
    ]
  }
  if (dsoftbus_feature_encrypt == 0) {
    bus_center_core_adapter_src += [
      "$dsoftbus_root_path/core/adapter/huks/src/softbus_rsa_encrypt_virtual.c",
    ]
    bus_center_core_adapter_inc +=
        [ "$dsoftbus_root_path/core/adapter/huks/include" ]
  } else if (dsoftbus_feature_encrypt == 1) {
    bus_center_core_adapter_src +=
        [ "$dsoftbus_root_path/core/adapter/huks/src/softbus_rsa_encrypt.c" ]
    bus_center_core_adapter_inc +=
        [ "$dsoftbus_root_path/core/adapter/huks/include" ]
    bus_center_core_adapter_external_deps += [
      "huks:libhukssdk",
      "openssl:libcrypto_shared",
    ]
  }
}
