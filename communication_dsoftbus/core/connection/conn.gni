# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../core/connection/ble/conn_ble.gni")
import("../../core/connection/br/conn_br.gni")
import("../../dsoftbus.gni")

#import("//foundation/communication/dsoftbus/core/connection/common/conn_common.gni")
import("../../core/connection/tcp/conn_tcp.gni")
CONN_SERVER_DEFINES = []
conn_manager_src = ble_connection_src + br_connection_src + tcp_connection_src
conn_manager_inc = ble_connection_inc + br_connection_inc + tcp_connection_inc
conn_manager_external_deps = ble_connection_external_deps
conn_manager_common_deps = [ "$dsoftbus_dfx_path:softbus_dfx" ]

conn_manager_src += [
  "$dsoftbus_root_path/core/connection/manager/softbus_conn_manager.c",
  "$dsoftbus_root_path/core/connection/manager/softbus_conn_flow_control.c",
]
conn_manager_inc += [
  "$dsoftbus_root_path/core/connection/manager",
  "$dsoftbus_root_path/core/connection/interface",
  "$dsoftbus_root_path/core/common/include",
  "$dsoftbus_root_path/core/connection/coap/include",
]
if (dsoftbus_feature_conn_tcp_comm) {
  CONN_SERVER_DEFINES += [ "DSOFTBUS_FEATURE_CONN_TCP_COMM" ]
  if (dsoftbus_feature_conn_tcp_proxy) {
    CONN_SERVER_DEFINES += [ "DSOFTBUS_FEATURE_CONN_TCP_PROXY" ]
  }
}
if (dsoftbus_feature_conn_ble) {
  CONN_SERVER_DEFINES += [ "DSOFTBUS_FEATURE_CONN_BLE" ]
}
if (dsoftbus_feature_conn_br) {
  CONN_SERVER_DEFINES += [ "DSOFTBUS_FEATURE_CONN_BR" ]
}

if (dsoftbus_feature_ex_kits) {
  import(
      "$dsoftbus_root_path/dsoftbus_enhance/core/connection/coap/conn_coap.gni")

  conn_manager_inc += conn_coap_inc
  conn_manager_src += conn_coap_src
  conn_manager_common_deps += conn_coap_common_deps
  conn_manager_external_deps += conn_coap_external_deps

  import(
      "$dsoftbus_root_path/dsoftbus_enhance/core/connection/legacy/legacy.gni")

  conn_manager_inc += legacy_connection_inc
  conn_manager_src += legacy_connection_src
  conn_manager_common_deps += legacy_connection_common_deps
  conn_manager_external_deps += legacy_connection_external_deps
  if (dsoftbus_feature_conn_ble_direct) {
    CONN_SERVER_DEFINES += [ "DSOFTBUS_FEATURE_CONN_BLE_DIRECT" ]
  }
  if (dsoftbus_feature_conn_coc) {
    CONN_SERVER_DEFINES += [ "DSOFTBUS_FEATURE_CONN_COC" ]
  }
  if (dsoftbus_feature_conn_legacy_data) {
    CONN_SERVER_DEFINES += [ "DSOFTBUS_FEATURE_CONN_LEGACY_DATA" ]
  }
  if (dsoftbus_feature_conn_legacy_im) {
    CONN_SERVER_DEFINES += [ "DSOFTBUS_FEATURE_CONN_LEGACY_IM" ]
  }
} else {
  conn_manager_src += [
    "$dsoftbus_root_path/adapter/common/net/bluetooth/ble/softbus_adapter_ble_conflict_virtual.c",
    "$dsoftbus_root_path/core/connection/coap/src/conn_coap_manager_virtual.c",
  ]
}
